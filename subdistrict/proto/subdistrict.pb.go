// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: subdistrict.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetAllSubdistricts
type GetAllSubdistrictsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*SubdistrictData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllSubdistrictsResponse) Reset() {
	*x = GetAllSubdistrictsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSubdistrictsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSubdistrictsResponse) ProtoMessage() {}

func (x *GetAllSubdistrictsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSubdistrictsResponse.ProtoReflect.Descriptor instead.
func (*GetAllSubdistrictsResponse) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllSubdistrictsResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetAllSubdistrictsResponse) GetData() []*SubdistrictData {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetSubdistrictByID
type GetSubdistrictByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *GetSubdistrictByIDInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetSubdistrictByIDRequest) Reset() {
	*x = GetSubdistrictByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdistrictByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdistrictByIDRequest) ProtoMessage() {}

func (x *GetSubdistrictByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdistrictByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSubdistrictByIDRequest) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{1}
}

func (x *GetSubdistrictByIDRequest) GetRequest() *GetSubdistrictByIDInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetSubdistrictByIDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubdistrictByIDInput) Reset() {
	*x = GetSubdistrictByIDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdistrictByIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdistrictByIDInput) ProtoMessage() {}

func (x *GetSubdistrictByIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdistrictByIDInput.ProtoReflect.Descriptor instead.
func (*GetSubdistrictByIDInput) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{2}
}

func (x *GetSubdistrictByIDInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSubdistrictByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header          `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   *SubdistrictData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSubdistrictByIDResponse) Reset() {
	*x = GetSubdistrictByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdistrictByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdistrictByIDResponse) ProtoMessage() {}

func (x *GetSubdistrictByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdistrictByIDResponse.ProtoReflect.Descriptor instead.
func (*GetSubdistrictByIDResponse) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{3}
}

func (x *GetSubdistrictByIDResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetSubdistrictByIDResponse) GetData() *SubdistrictData {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetSubdistrictsByIDs
type GetSubdistrictsByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *GetSubdistrictsByIDsInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetSubdistrictsByIDsRequest) Reset() {
	*x = GetSubdistrictsByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdistrictsByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdistrictsByIDsRequest) ProtoMessage() {}

func (x *GetSubdistrictsByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdistrictsByIDsRequest.ProtoReflect.Descriptor instead.
func (*GetSubdistrictsByIDsRequest) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubdistrictsByIDsRequest) GetRequest() *GetSubdistrictsByIDsInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetSubdistrictsByIDsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubdistrictsByIDsInput) Reset() {
	*x = GetSubdistrictsByIDsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdistrictsByIDsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdistrictsByIDsInput) ProtoMessage() {}

func (x *GetSubdistrictsByIDsInput) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdistrictsByIDsInput.ProtoReflect.Descriptor instead.
func (*GetSubdistrictsByIDsInput) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubdistrictsByIDsInput) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetSubdistrictsByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*SubdistrictData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSubdistrictsByIDsResponse) Reset() {
	*x = GetSubdistrictsByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdistrictsByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdistrictsByIDsResponse) ProtoMessage() {}

func (x *GetSubdistrictsByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdistrictsByIDsResponse.ProtoReflect.Descriptor instead.
func (*GetSubdistrictsByIDsResponse) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{6}
}

func (x *GetSubdistrictsByIDsResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetSubdistrictsByIDsResponse) GetData() []*SubdistrictData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Base Data
type SubdistrictData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubdistrictID   string `protobuf:"bytes,1,opt,name=subdistrictID,proto3" json:"subdistrictID,omitempty"`
	SubdistrictName string `protobuf:"bytes,2,opt,name=subdistrictName,proto3" json:"subdistrictName,omitempty"`
	SubdistrictType string `protobuf:"bytes,3,opt,name=subdistrictType,proto3" json:"subdistrictType,omitempty"`
	PostalCode      string `protobuf:"bytes,4,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	DistrictID      string `protobuf:"bytes,5,opt,name=districtID,proto3" json:"districtID,omitempty"`
}

func (x *SubdistrictData) Reset() {
	*x = SubdistrictData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubdistrictData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubdistrictData) ProtoMessage() {}

func (x *SubdistrictData) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubdistrictData.ProtoReflect.Descriptor instead.
func (*SubdistrictData) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{7}
}

func (x *SubdistrictData) GetSubdistrictID() string {
	if x != nil {
		return x.SubdistrictID
	}
	return ""
}

func (x *SubdistrictData) GetSubdistrictName() string {
	if x != nil {
		return x.SubdistrictName
	}
	return ""
}

func (x *SubdistrictData) GetSubdistrictType() string {
	if x != nil {
		return x.SubdistrictType
	}
	return ""
}

func (x *SubdistrictData) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *SubdistrictData) GetDistrictID() string {
	if x != nil {
		return x.DistrictID
	}
	return ""
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message []string `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{8}
}

func (x *Header) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Header) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

type OptionalString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	HasSet bool   `protobuf:"varint,2,opt,name=hasSet,proto3" json:"hasSet,omitempty"`
}

func (x *OptionalString) Reset() {
	*x = OptionalString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdistrict_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalString) ProtoMessage() {}

func (x *OptionalString) ProtoReflect() protoreflect.Message {
	mi := &file_subdistrict_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalString.ProtoReflect.Descriptor instead.
func (*OptionalString) Descriptor() ([]byte, []int) {
	return file_subdistrict_proto_rawDescGZIP(), []int{9}
}

func (x *OptionalString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *OptionalString) GetHasSet() bool {
	if x != nil {
		return x.HasSet
	}
	return false
}

var File_subdistrict_proto protoreflect.FileDescriptor

var file_subdistrict_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75,
	0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x7b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75,
	0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7d, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcb, 0x01, 0x0a,
	0x0f, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f,
	0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x61, 0x73, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x68, 0x61, 0x73, 0x53, 0x65, 0x74, 0x32, 0xc5, 0x02, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x73, 0x75,
	0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x73,
	0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x73, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x03,
	0x5a, 0x01, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_subdistrict_proto_rawDescOnce sync.Once
	file_subdistrict_proto_rawDescData = file_subdistrict_proto_rawDesc
)

func file_subdistrict_proto_rawDescGZIP() []byte {
	file_subdistrict_proto_rawDescOnce.Do(func() {
		file_subdistrict_proto_rawDescData = protoimpl.X.CompressGZIP(file_subdistrict_proto_rawDescData)
	})
	return file_subdistrict_proto_rawDescData
}

var file_subdistrict_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_subdistrict_proto_goTypes = []interface{}{
	(*GetAllSubdistrictsResponse)(nil),   // 0: subdistrict.GetAllSubdistrictsResponse
	(*GetSubdistrictByIDRequest)(nil),    // 1: subdistrict.GetSubdistrictByIDRequest
	(*GetSubdistrictByIDInput)(nil),      // 2: subdistrict.GetSubdistrictByIDInput
	(*GetSubdistrictByIDResponse)(nil),   // 3: subdistrict.GetSubdistrictByIDResponse
	(*GetSubdistrictsByIDsRequest)(nil),  // 4: subdistrict.GetSubdistrictsByIDsRequest
	(*GetSubdistrictsByIDsInput)(nil),    // 5: subdistrict.GetSubdistrictsByIDsInput
	(*GetSubdistrictsByIDsResponse)(nil), // 6: subdistrict.GetSubdistrictsByIDsResponse
	(*SubdistrictData)(nil),              // 7: subdistrict.SubdistrictData
	(*Header)(nil),                       // 8: subdistrict.Header
	(*OptionalString)(nil),               // 9: subdistrict.OptionalString
	(*emptypb.Empty)(nil),                // 10: google.protobuf.Empty
}
var file_subdistrict_proto_depIdxs = []int32{
	8,  // 0: subdistrict.GetAllSubdistrictsResponse.header:type_name -> subdistrict.Header
	7,  // 1: subdistrict.GetAllSubdistrictsResponse.data:type_name -> subdistrict.SubdistrictData
	2,  // 2: subdistrict.GetSubdistrictByIDRequest.request:type_name -> subdistrict.GetSubdistrictByIDInput
	8,  // 3: subdistrict.GetSubdistrictByIDResponse.header:type_name -> subdistrict.Header
	7,  // 4: subdistrict.GetSubdistrictByIDResponse.data:type_name -> subdistrict.SubdistrictData
	5,  // 5: subdistrict.GetSubdistrictsByIDsRequest.request:type_name -> subdistrict.GetSubdistrictsByIDsInput
	8,  // 6: subdistrict.GetSubdistrictsByIDsResponse.header:type_name -> subdistrict.Header
	7,  // 7: subdistrict.GetSubdistrictsByIDsResponse.data:type_name -> subdistrict.SubdistrictData
	10, // 8: subdistrict.SubdistrictService.GetAllSubdistricts:input_type -> google.protobuf.Empty
	1,  // 9: subdistrict.SubdistrictService.GetSubdistrictByID:input_type -> subdistrict.GetSubdistrictByIDRequest
	4,  // 10: subdistrict.SubdistrictService.GetSubdistrictsByIDs:input_type -> subdistrict.GetSubdistrictsByIDsRequest
	0,  // 11: subdistrict.SubdistrictService.GetAllSubdistricts:output_type -> subdistrict.GetAllSubdistrictsResponse
	3,  // 12: subdistrict.SubdistrictService.GetSubdistrictByID:output_type -> subdistrict.GetSubdistrictByIDResponse
	6,  // 13: subdistrict.SubdistrictService.GetSubdistrictsByIDs:output_type -> subdistrict.GetSubdistrictsByIDsResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_subdistrict_proto_init() }
func file_subdistrict_proto_init() {
	if File_subdistrict_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_subdistrict_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSubdistrictsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdistrictByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdistrictByIDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdistrictByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdistrictsByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdistrictsByIDsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdistrictsByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubdistrictData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdistrict_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_subdistrict_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_subdistrict_proto_goTypes,
		DependencyIndexes: file_subdistrict_proto_depIdxs,
		MessageInfos:      file_subdistrict_proto_msgTypes,
	}.Build()
	File_subdistrict_proto = out.File
	file_subdistrict_proto_rawDesc = nil
	file_subdistrict_proto_goTypes = nil
	file_subdistrict_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SubdistrictServiceClient is the client API for SubdistrictService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubdistrictServiceClient interface {
	GetAllSubdistricts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAllSubdistrictsResponse, error)
	GetSubdistrictByID(ctx context.Context, in *GetSubdistrictByIDRequest, opts ...grpc.CallOption) (*GetSubdistrictByIDResponse, error)
	GetSubdistrictsByIDs(ctx context.Context, in *GetSubdistrictsByIDsRequest, opts ...grpc.CallOption) (*GetSubdistrictsByIDsResponse, error)
}

type subdistrictServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSubdistrictServiceClient(cc grpc.ClientConnInterface) SubdistrictServiceClient {
	return &subdistrictServiceClient{cc}
}

func (c *subdistrictServiceClient) GetAllSubdistricts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAllSubdistrictsResponse, error) {
	out := new(GetAllSubdistrictsResponse)
	err := c.cc.Invoke(ctx, "/subdistrict.SubdistrictService/GetAllSubdistricts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subdistrictServiceClient) GetSubdistrictByID(ctx context.Context, in *GetSubdistrictByIDRequest, opts ...grpc.CallOption) (*GetSubdistrictByIDResponse, error) {
	out := new(GetSubdistrictByIDResponse)
	err := c.cc.Invoke(ctx, "/subdistrict.SubdistrictService/GetSubdistrictByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subdistrictServiceClient) GetSubdistrictsByIDs(ctx context.Context, in *GetSubdistrictsByIDsRequest, opts ...grpc.CallOption) (*GetSubdistrictsByIDsResponse, error) {
	out := new(GetSubdistrictsByIDsResponse)
	err := c.cc.Invoke(ctx, "/subdistrict.SubdistrictService/GetSubdistrictsByIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubdistrictServiceServer is the server API for SubdistrictService service.
type SubdistrictServiceServer interface {
	GetAllSubdistricts(context.Context, *emptypb.Empty) (*GetAllSubdistrictsResponse, error)
	GetSubdistrictByID(context.Context, *GetSubdistrictByIDRequest) (*GetSubdistrictByIDResponse, error)
	GetSubdistrictsByIDs(context.Context, *GetSubdistrictsByIDsRequest) (*GetSubdistrictsByIDsResponse, error)
}

// UnimplementedSubdistrictServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSubdistrictServiceServer struct {
}

func (*UnimplementedSubdistrictServiceServer) GetAllSubdistricts(context.Context, *emptypb.Empty) (*GetAllSubdistrictsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllSubdistricts not implemented")
}
func (*UnimplementedSubdistrictServiceServer) GetSubdistrictByID(context.Context, *GetSubdistrictByIDRequest) (*GetSubdistrictByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubdistrictByID not implemented")
}
func (*UnimplementedSubdistrictServiceServer) GetSubdistrictsByIDs(context.Context, *GetSubdistrictsByIDsRequest) (*GetSubdistrictsByIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubdistrictsByIDs not implemented")
}

func RegisterSubdistrictServiceServer(s *grpc.Server, srv SubdistrictServiceServer) {
	s.RegisterService(&_SubdistrictService_serviceDesc, srv)
}

func _SubdistrictService_GetAllSubdistricts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubdistrictServiceServer).GetAllSubdistricts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subdistrict.SubdistrictService/GetAllSubdistricts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubdistrictServiceServer).GetAllSubdistricts(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubdistrictService_GetSubdistrictByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubdistrictByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubdistrictServiceServer).GetSubdistrictByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subdistrict.SubdistrictService/GetSubdistrictByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubdistrictServiceServer).GetSubdistrictByID(ctx, req.(*GetSubdistrictByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubdistrictService_GetSubdistrictsByIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubdistrictsByIDsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubdistrictServiceServer).GetSubdistrictsByIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subdistrict.SubdistrictService/GetSubdistrictsByIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubdistrictServiceServer).GetSubdistrictsByIDs(ctx, req.(*GetSubdistrictsByIDsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SubdistrictService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "subdistrict.SubdistrictService",
	HandlerType: (*SubdistrictServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllSubdistricts",
			Handler:    _SubdistrictService_GetAllSubdistricts_Handler,
		},
		{
			MethodName: "GetSubdistrictByID",
			Handler:    _SubdistrictService_GetSubdistrictByID_Handler,
		},
		{
			MethodName: "GetSubdistrictsByIDs",
			Handler:    _SubdistrictService_GetSubdistrictsByIDs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "subdistrict.proto",
}
